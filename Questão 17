import math

# Implementação do Bucket Sort
def bucket_sort(grades):
    """
    Ordena uma lista de notas (entre 0 e 100) usando Bucket Sort.
    
    Args:
    grades (list): Lista de notas a serem ordenadas.
    
    Retorna:
    list: Lista de notas ordenada.
    """
    num_buckets = 10  # Dividimos as notas em 10 buckets
    buckets = [[] for _ in range(num_buckets)]
    
    # Distribuir as notas nos buckets
    for grade in grades:
        index = min(num_buckets - 1, grade // 10)  # Garantir que 100 fique no último bucket
        buckets[index].append(grade)
    
    # Ordenar cada bucket individualmente
    for bucket in buckets:
        bucket.sort()
    
    # Concatenar os buckets
    sorted_grades = []
    for bucket in buckets:
        sorted_grades.extend(bucket)
    
    return sorted_grades

# Implementação do Interpolation Search
def interpolation_search(arr, target):
    """
    Procura um elemento em uma lista ordenada usando Interpolation Search.
    
    Args:
    arr (list): Lista de elementos ordenados.
    target (int): Elemento a ser encontrado.
    
    Retorna:
    int: Índice do elemento encontrado ou -1 se não estiver na lista.
    """
    low, high = 0, len(arr) - 1
    while low <= high and target >= arr[low] and target <= arr[high]:
        if low == high:
            if arr[low] == target:
                return low
            return -1
        
        pos = low + ((high - low) // (arr[high] - arr[low] + 1)) * (target - arr[low])
        
        if arr[pos] == target:
            return pos
        elif arr[pos] < target:
            low = pos + 1
        else:
            high = pos - 1
    return -1

# Exemplo de uso
grades = [85, 90, 67, 88, 76, 95, 80, 100, 73, 84]  # Notas da turma
target_grade = 88  # Nota que queremos encontrar

# Ordenar as notas usando Bucket Sort
sorted_grades = bucket_sort(grades)

# Procurar a nota usando Interpolation Search
index = interpolation_search(sorted_grades, target_grade)

# Resultado
print(f"Notas ordenadas: {sorted_grades}")
if index != -1:
    print(f"A nota {target_grade} foi encontrada no índice {index}.")
else:
    print(f"A nota {target_grade} não foi encontrada.")
